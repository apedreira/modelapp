{"version":3,"sources":["react-components/Icons/YoutubeIcon.js","react-components/navbar.js","react-components/plot.js","App.js","reportWebVitals.js","index.js"],"names":["YoutubeIcon","viewBox","d","Navbar","className","href","to","strToArr","str","split","map","item","parseFloat","MyPlot","useState","xAxis","setxAxis","yAxis","setyAxis","log10Nt","growthRate","setgrowthRate","carrCapacity","setcarrCapacity","lagPhase","setlagPhase","x","y","z","plotData","setPlotData","handleInputChange","event","target","name","value","console","log","traces","type","traces2","onChange","onClick","xAxisSplitted","yAxisSplitted","foo","ntArr","times","charge","mu","lam","value2","result","result2","i","length","Math","log10","exp","push","mathFunct","data","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAfK,WAEhB,OACI,qBAAKC,QAAQ,mBAAb,SACI,sBAAMC,EAAE,imB,OC4CLC,EA7CA,WAEX,OACI,qBAAKC,UAAU,WAAf,SACI,eAAC,IAAD,WACI,qBAAKA,UAAU,gBAAf,sBAEA,qBAAIA,UAAU,gBAAd,UAEI,qBAAIA,UAAU,oBAAd,UACI,mBAAGC,KAAK,qBAAqBD,UAAU,mBAAvC,8BACA,sBAAKA,UAAU,4BAAf,UACI,cAAC,IAAD,CAAME,GAAG,kBAAT,4BACA,cAAC,IAAD,CAAMA,GAAG,kBAAT,kCAGR,qBAAIF,UAAU,oBAAd,UACI,mBAAGC,KAAK,qBAAqBD,UAAU,mBAAvC,0BACA,sBAAKA,UAAU,4BAAf,UACI,cAAC,IAAD,CAAME,GAAG,WAAT,qBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,qBACA,cAAC,IAAD,CAAMA,GAAG,WAAT,2BAGR,6BACI,cAAC,IAAD,CAAMF,UAAU,gBAAgBE,GAAG,iBAAnC,qCAIR,oBAAIF,UAAU,iCAAd,SAGQ,cAAC,IAAD,CAAMA,UAAU,gBAAgBE,GAAG,YAAnC,wBAIR,mBAAGF,UAAU,oCAAoCC,KAAK,uBAAtD,SACI,cAAC,EAAD,Y,wBCnCdE,EAAW,SAACC,GAChB,OAAOA,EAAIC,MAAM,KAAKC,KAAI,SAAAC,GAAI,OAAIC,WAAWD,EAAM,QA8HtCE,EAnGA,WAEb,MAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,qBAA1B,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,qBAA9B,mBAAOK,EAAP,KACA,GADA,KACoCL,sBAApC,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAAwCP,qBAAxC,mBAAOQ,EAAP,KAAqBC,EAArB,KACA,EAAgCT,qBAAhC,mBAAOU,EAAP,KAAiBC,EAAjB,KACA,EAAgCX,mBAAS,CAAEY,EAAGX,EAAOY,EAAGV,EAAOW,EAAGT,IAAlE,mBAAOU,EAAP,KAAiBC,EAAjB,KAiBMC,EAAoB,SAACC,GACzB,OAAQA,EAAMC,OAAOC,MACnB,IAAK,SACHlB,EAASgB,EAAMC,OAAOE,OACtB,MACF,IAAK,SACHjB,EAASc,EAAMC,OAAOE,OACtB,MACF,IAAK,UACHd,EAAcW,EAAMC,OAAOE,OAC3B,MACF,IAAK,SACHZ,EAAgBS,EAAMC,OAAOE,OAC7B,MACF,IAAK,WACHV,EAAYO,EAAMC,OAAOE,OACzB,MACF,QACEC,QAAQC,IAAI,sBAKdC,EACJ,CACEZ,EAAGG,EAASH,EACZC,EAAGE,EAASF,EACZY,KAAM,UACNL,KAAM,yBAGJM,EACJ,CACEd,EAAGG,EAASH,EACZC,EAAGE,EAASD,EACZW,KAAM,UACNL,KAAM,YAGR,OACE,qCACE,yEAEE,0BAAUA,KAAK,SAASC,MAAOlB,EAAOwB,SAAUV,OAElD,uBACA,sEAEE,0BAAUG,KAAK,SAASC,MAAOpB,EAAO0B,SAAUV,OAElD,uBACA,0DAEE,uBAAOG,KAAK,UAAUC,MAAOf,EAAYqB,SAAUV,OAErD,uBACA,2DAEE,uBAAOG,KAAK,SAASC,MAAOb,EAAcmB,SAAUV,OAEtD,uBACA,iEAEE,uBAAOG,KAAK,WAAWC,MAAOX,EAAUiB,SAAUV,OAEpD,wBAAQW,QA/EQ,WAClB,IAAIC,EAAgBpC,EAASQ,GACzB6B,EAAgBrC,EAASU,GAIzB4B,EAjCU,SAACC,EAAOC,EAAOC,EAAQC,EAAIC,GAM3C,IAJA,IACIf,EAEAgB,EAHAC,EAAS,GAETC,EAAU,GAELC,EAAI,EAAGA,EAAIP,EAAMQ,OAAQD,IAChCnB,EAAQqB,KAAKC,MAAMX,EAAM,IAAOE,GAAU,EAAIQ,KAAKE,IAAK,EAAIT,EAAKD,GAAWE,EAAMH,EAAMO,IAAM,IAC9FH,EAASK,KAAKC,MAAMX,EAAMQ,IAC1BF,EAAOO,KAAKxB,GACZkB,EAAQM,KAAKR,GAEf,MAAO,CAACC,EAAQC,GAqBJO,CAAUhB,EAAeD,EAH3BrB,EACCF,EACCI,GAEPL,EAAQ0B,EAAI,GACff,EAAY,CAAEJ,EAAGiB,EAAehB,EAAGkB,EAAI,GAAIjB,EAAET,IAC7CiB,QAAQC,IAAIO,IAsEV,oBACA,kCACA,cAAC,IAAD,CACEiB,KAAM,CAACvB,EAAQE,SC9GRsB,MATf,WACE,OACE,sBAAK1D,UAAU,MAAf,UACJ,cAAC,EAAD,IACA,cAAC,EAAD,QCDe2D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1c658e8b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst YoutubeIcon = () => {\r\n\r\n    return (\r\n        <svg viewBox=\"0 0 237.3 195.19\">\r\n            <path d=\"M73,182.43c-23.51-3.35-40.82-16.78-44.8-34.34H46.89l.46-1.38C36.66,143.39,27.5,137.87,\r\n            20.74,129S10.23,110.37,10.52,99.16l19.9,5.65c-20-19-25.17-40.35-13.33-66.3C44,69.86,77.37,87.13,\r\n            118.5,90.08c0-7-.94-13.69.18-20,3.23-18.36,14.09-31.2,31.56-37.4,17.81-6.32,34.54-3.13,49,9.32,2.73,\r\n            2.36,5,3.3,8.34,2.07,8.5-3.14,17-6.21,25.79-9.39C230,45.16,223,53,214.75,60.56l24.89-6.79a80.68,80.68,\r\n            0,0,1-19.1,20.75c-3.22,2.47-4.42,5-4.41,9.11.07,62.85-42.46,127.38-116,139.09-32,\r\n            5.1-62.67.24-91.34-15.43-1.46-.79-2.89-1.65-4.31-2.52a25.33,25.33,0,0,1-2.17-1.87C28.67,204.47,51.83,\r\n            198.45,73,182.43Z\" />\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default YoutubeIcon","import React from 'react';\r\nimport '../styles/main.scss';\r\nimport YoutubeIcon from './Icons/YoutubeIcon';\r\nimport Logo from './Icons/Logo'\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\r\nconst Navbar = () => {\r\n\r\n    return (\r\n        <nav className=\"c-navbar\">\r\n            <Router>\r\n                <div className=\"c-navbar-logo\">ModelApp</div>\r\n\r\n                <ul className=\"c-navbar-menu\">\r\n\r\n                    <li className=\"c-navbar-dropdown\">\r\n                        <a href=\"javascript:void(0)\" className=\"c-navbar-dropbtn\">Microbial models</a>\r\n                        <div className=\"c-navbar-dropdown-content\">\r\n                            <Link to=\"/logistic-model\">Logistic model</Link>\r\n                            <Link to=\"/gompertz-model\">Gompertz model</Link>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"c-navbar-dropdown\">\r\n                        <a href=\"javascript:void(0)\" className=\"c-navbar-dropbtn\">Other models</a>\r\n                        <div className=\"c-navbar-dropdown-content\">\r\n                            <Link to=\"/model-1\">Model 1</Link>\r\n                            <Link to=\"/model-2\">Model 2</Link>\r\n                            <Link to=\"/model-3\">Model 3</Link>\r\n                        </div>\r\n                    </li>\r\n                    <li>\r\n                        <Link className=\"c-navbar-link\" to=\"/not_dprn_link\">Not droppable link</Link>\r\n                    </li>\r\n\r\n                </ul>\r\n                <li className=\"c-navbar-dropdown u-pushright \">\r\n                    \r\n             \r\n                        <Link className=\"c-navbar-link\" to=\"/about-us\">About us</Link>\r\n                \r\n                </li>\r\n\r\n                <a className=\"c-navbar-icon c-navbar--pushright\" href=\"https://twitter.com/\">\r\n                    <YoutubeIcon />\r\n                </a>\r\n            </Router>\r\n        </nav>\r\n\r\n    )\r\n}\r\n\r\nexport default Navbar","import React, { useState } from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\n//https://gist.github.com/mandiwise/44d1edce18f2ffb14f63\r\n\r\n// https://stackoverflow.com/questions/55757761/handle-an-input-with-react-hooks\r\n//Función que transforma los inputs (string) a un array de floats\r\nconst strToArr = (str) => {\r\n  return str.split(\",\").map(item => parseFloat(item, 10))\r\n}\r\n\r\n/*Función matemática de ejemplo, multiplica cada número del array numérico x2\r\nconst mathFunct = (nt, p1) => {\r\n  return intArray.map(num => Math.log10(intArr)*p1)\r\n}*/\r\n// 0.018,0.052,0.427,1.092,1.628,2.11,2.58,2.55,2.575,2.495,2.305\r\n//0,2,4,8,12,16,20,24,30,36,48\r\n\r\n//Función matemática de ejemplo, multiplica cada número del array numérico x2\r\nconst mathFunct = (ntArr, times, charge, mu, lam) => {\r\n\r\n  let result = []\r\n  let value;\r\n  let result2 = []\r\n  let value2;\r\n  for (let i = 0; i < times.length; i++) {\r\n    value = Math.log10(ntArr[0]) + (charge / (1 + Math.exp((4 * mu / charge) * (lam - times[i]) + 2)))\r\n    value2 = Math.log10(ntArr[i])\r\n    result.push(value)\r\n    result2.push(value2)\r\n  }\r\n  return [result, result2]\r\n}\r\n\r\n\r\nconst MyPlot = () => {\r\n\r\n  const [xAxis, setxAxis] = useState()\r\n  const [yAxis, setyAxis] = useState()\r\n  const [log10Nt, setlog10Nt] = useState()\r\n  const [growthRate, setgrowthRate] = useState()\r\n  const [carrCapacity, setcarrCapacity] = useState()\r\n  const [lagPhase, setlagPhase] = useState()\r\n  const [plotData, setPlotData] = useState({ x: xAxis, y: yAxis, z: log10Nt })\r\n\r\n  //Plotea el resultado de aplicar la función matemática usando los datos introducidos por el usuario\r\n  const handleClick = () => {\r\n    let xAxisSplitted = strToArr(xAxis)\r\n    let yAxisSplitted = strToArr(yAxis)\r\n    let c = carrCapacity\r\n    let mu = growthRate\r\n    let lam = lagPhase\r\n    let foo = mathFunct(yAxisSplitted, xAxisSplitted, c, mu, lam)\r\n   let log10Nt=foo[1]\r\n    setPlotData({ x: xAxisSplitted, y: foo[0], z:log10Nt })\r\n    console.log(yAxisSplitted)\r\n\r\n  };\r\n\r\n  //Cambia el valor de los ejes cuando se modifica un input\r\n  const handleInputChange = (event) => {\r\n    switch (event.target.name) {\r\n      case 'xInput':\r\n        setxAxis(event.target.value);\r\n        break;\r\n      case 'yInput':\r\n        setyAxis(event.target.value)\r\n        break;\r\n      case 'muInput':\r\n        setgrowthRate(event.target.value)\r\n        break;\r\n      case 'kInput':\r\n        setcarrCapacity(event.target.value)\r\n        break;\r\n      case 'lamInput':\r\n        setlagPhase(event.target.value)\r\n        break;\r\n      default:\r\n        console.log(\"algo no fue bien\")\r\n    }\r\n\r\n  };\r\n\r\n  let traces =\r\n  {\r\n    x: plotData.x,\r\n    y: plotData.y,\r\n    type: 'scatter',\r\n    name: 'Logistic Model output'\r\n\r\n  }\r\n  let traces2 =\r\n  {\r\n    x: plotData.x,\r\n    y: plotData.z,\r\n    type: 'scatter',\r\n    name: 'Log10(N)'\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <label>\r\n        OD or N (Values separated by comma):\r\n        <textarea name=\"yInput\" value={yAxis} onChange={handleInputChange} />\r\n      </label>\r\n      <br></br>\r\n      <label>\r\n        Time (Values separated by comma):\r\n        <textarea name=\"xInput\" value={xAxis} onChange={handleInputChange} />\r\n      </label>\r\n      <br></br>\r\n      <label>\r\n        Growth rate (μ):\r\n        <input name=\"muInput\" value={growthRate} onChange={handleInputChange} />\r\n      </label>\r\n      <br></br>\r\n      <label>\r\n        Carrying capacity (K):\r\n        <input name=\"kInput\" value={carrCapacity} onChange={handleInputChange} />\r\n      </label>\r\n      <br></br>\r\n      <label>\r\n        Lag phase duration (λ):\r\n        <input name=\"lamInput\" value={lagPhase} onChange={handleInputChange} />\r\n      </label>\r\n      <button onClick={handleClick}>MODEL!</button>\r\n      <p> </p>\r\n      <Plot\r\n        data={[traces, traces2]}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MyPlot","\r\nimport './App.css';\r\nimport Navbar from './react-components/navbar'\r\nimport MyPlot from './react-components/plot'\r\nimport LogisticModel from './logisticModel'\r\n\r\nimport React from 'react';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n<Navbar></Navbar>\r\n<MyPlot></MyPlot>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}